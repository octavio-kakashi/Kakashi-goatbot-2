const { config } = global.GoatBot;
const { writeFileSync } = require("fs-extra");

module.exports = {
        config: {
                name: "admin",
                version: "1.6",
                author: "Messie Osango", 
                countDown: 5,
                role: 2,
                description: {
                        vi: "Th√™m, x√≥a, s·ª≠a quy·ªÅn admin",
                        fr: "Ajouter, supprimer ou modifier les administrateurs" 
                },
                category: "box chat",
                guide: {
                        vi: '   {pn} [add | -a] <uid | @tag>: Th√™m quy·ªÅn admin cho ng∆∞·ªùi d√πng'
                                + '\n          {pn} [remove | -r] <uid | @tag>: X√≥a quy·ªÅn admin c·ªßa ng∆∞·ªùi d√πng'
                                + '\n          {pn} [list | -l]: Li·ªát k√™ danh s√°ch admin',
                        fr: '   {pn} [add | -a] <uid | @tag>: Ajouter un administrateur'
                                + '\n          {pn} [remove | -r] <uid | @tag>: Retirer un administrateur'
                                + '\n          {pn} [list | -l]: Liste des administrateurs'
                }
        },

        langs: {
                vi: {
                        added: "‚úÖ | ƒê√£ th√™m quy·ªÅn admin cho %1 ng∆∞·ªùi d√πng:\n%2",
                        alreadyAdmin: "\n‚ö†Ô∏è | %1 ng∆∞·ªùi d√πng ƒë√£ c√≥ quy·ªÅn admin t·ª´ tr∆∞·ªõc r·ªìi:\n%2",
                        missingIdAdd: "‚ö†Ô∏è | Vui l√≤ng nh·∫≠p ID ho·∫∑c tag ng∆∞·ªùi d√πng mu·ªën th√™m quy·ªÅn admin",
                        removed: "‚úÖ | ƒê√£ x√≥a quy·ªÅn admin c·ªßa %1 ng∆∞·ªùi d√πng:\n%2",
                        notAdmin: "‚ö†Ô∏è | %1 ng∆∞·ªùi d√πng kh√¥ng c√≥ quy·ªÅn admin:\n%2",
                        missingIdRemove: "‚ö†Ô∏è | Vui l√≤ng nh·∫≠p ID ho·∫∑c tag ng∆∞·ªùi d√πng mu·ªën x√≥a quy·ªÅn admin",
                        listAdmin: "üëë | Danh s√°ch admin:\n%1"
                },
                fr: { 
                        added: "‚ï≠‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùêæùê¥ùêæùê¥ùëÜùêªùêº ùêµùëúùë° ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   ‚úÖ %1 administrateur(s) ajout√©(s):\n‚îÇ   %2\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ",
                        alreadyAdmin: "\n‚ï≠‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùê¥ùëâùê∏ùëÖùëáùêºùëÜùëÜùê∏ùëÄùê∏ùëÅùëá ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   ‚ö†Ô∏è %1 utilisateur(s) d√©j√† admin:\n‚îÇ   %2\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ",
                        missingIdAdd: "‚ï≠‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùê∏ùëÖùëÖùê∏ùëàùëÖ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   ‚ö†Ô∏è Veuillez sp√©cifier un ID ou taguer un utilisateur\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ",
                        removed: "‚ï≠‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùêæùê¥ùêæùê¥ùëÜùêªùêº ùêµùëúùë° ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   ‚úÖ %1 administrateur(s) retir√©(s):\n‚îÇ   %2\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ",
                        notAdmin: "\n‚ï≠‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùê¥ùëâùê∏ùëÖùëáùêºùëÜùëÜùê∏ùëÄùê∏ùëÅùëá ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   ‚ö†Ô∏è %1 utilisateur(s) non administrateur:\n‚îÇ   %2\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ",
                        missingIdRemove: "‚ï≠‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùê∏ùëÖùëÖùê∏ùëàùëÖ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   ‚ö†Ô∏è Veuillez sp√©cifier un ID ou taguer un utilisateur\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ",
                        listAdmin: "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ùê¥ùê∑ùëÄùêºùëÅùëÜ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ\n‚îÇ   üëë Liste des administrateurs:\n‚îÇ   %1\n‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åæ‚ãÖ ‚åæ ‚ãÖ‚åæ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
                }
        },

        onStart: async function ({ message, args, usersData, event, getLang }) {
                switch (args[0]) {
                        case "add":
                        case "-a": {
                                if (args[1]) {
                                        let uids = [];
                                        if (Object.keys(event.mentions).length > 0)
                                                uids = Object.keys(event.mentions);
                                        else if (event.messageReply)
                                                uids.push(event.messageReply.senderID);
                                        else
                                                uids = args.filter(arg => !isNaN(arg));
                                        const notAdminIds = [];
                                        const adminIds = [];
                                        for (const uid of uids) {
                                                if (config.adminBot.includes(uid))
                                                        adminIds.push(uid);
                                                else
                                                        notAdminIds.push(uid);
                                        }

                                        config.adminBot.push(...notAdminIds);
                                        const getNames = await Promise.all(uids.map(uid => usersData.getName(uid).then(name => ({ uid, name }))));
                                        writeFileSync(global.client.dirConfig, JSON.stringify(config, null, 2));
                                        return message.reply(
                                                (notAdminIds.length > 0 ? getLang("added", notAdminIds.length, getNames.map(({ uid, name }) => `‚Ä¢ ${name} (${uid})`).join("\n")) : "")
                                                + (adminIds.length > 0 ? getLang("alreadyAdmin", adminIds.length, adminIds.map(uid => `‚Ä¢ ${uid}`).join("\n")) : "")
                                        );
                                }
                                else
                                        return message.reply(getLang("missingIdAdd"));
                        }
                        case "remove":
                        case "-r": {
                                if (args[1]) {
                                        let uids = [];
                                        if (Object.keys(event.mentions).length > 0)
                                                uids = Object.keys(event.mentions)[0];
                                        else
                                                uids = args.filter(arg => !isNaN(arg));
                                        const notAdminIds = [];
                                        const adminIds = [];
                                        for (const uid of uids) {
                                                if (config.adminBot.includes(uid))
                                                        adminIds.push(uid);
                                                else
                                                        notAdminIds.push(uid);
                                        }
                                        for (const uid of adminIds)
                                                config.adminBot.splice(config.adminBot.indexOf(uid), 1);
                                        const getNames = await Promise.all(adminIds.map(uid => usersData.getName(uid).then(name => ({ uid, name }))));
                                        writeFileSync(global.client.dirConfig, JSON.stringify(config, null, 2));
                                        return message.reply(
                                                (adminIds.length > 0 ? getLang("removed", adminIds.length, getNames.map(({ uid, name }) => `‚Ä¢ ${name} (${uid})`).join("\n")) : "")
                                                + (notAdminIds.length > 0 ? getLang("notAdmin", notAdminIds.length, notAdminIds.map(uid => `‚Ä¢ ${uid}`).join("\n")) : "")
                                        );
                                }
                                else
                                        return message.reply(getLang("missingIdRemove"));
                        }
                        case "list":
                        case "-l": {
                                const getNames = await Promise.all(config.adminBot.map(uid => usersData.getName(uid).then(name => ({ uid, name }))));
                                return message.reply(getLang("listAdmin", getNames.map(({ uid, name }) => `‚Ä¢ ${name} (${uid})`).join("\n")));
                        }
                        default:
                                return message.SyntaxError();
                }
        }
};
